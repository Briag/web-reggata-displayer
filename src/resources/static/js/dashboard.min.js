var app = angular.module('RDash', ['ui.bootstrap', 'ngCookies', 'ngResource', 'ngRoute']);

'use strict';

/**
 * Configuration of JSOG librairy
 */

app.config(function($httpProvider) {

    $httpProvider.defaults.transformResponse.push(function(data,headersGetter){
    	if(headersGetter()['content-type'] === "application/json")
    	{	console.log(":D");return JSOG.decode(data);
    	}
    	return data;
    });
    
    $httpProvider.defaults.transformRequest.unshift(function(data,headersGetter){
    	return JSOG.encode(data);
    });

})


/**
 * Route configuration for the RDash module.
 */
app.config(function($routeProvider, $locationProvider) {

	$routeProvider.when('/', {templateUrl: 'templates/dashboard.html'});
	$routeProvider.when('/tables', {templateUrl: 'templates/tables.html'});
	$routeProvider.when('/regatta/manage', {templateUrl: 'templates/regatta/main.html'});
	$routeProvider.when('/regatta/add', {templateUrl: 'templates/regatta/add.html'});
	$routeProvider.when('/regatta/edit/:id', {templateUrl: 'templates/regatta/edit.html'});
	$routeProvider.when('/boat/manage', {templateUrl: 'templates/boat/main.html'});
	$routeProvider.when('/boat/add', {templateUrl: 'templates/boat/add.html'});
	$routeProvider.when('/team/manage', {templateUrl: 'templates/team/main.html'});
	$routeProvider.when('/team/add', {templateUrl: 'templates/team/add.html'});
	$routeProvider.when('/team/edit/:id', {templateUrl: 'templates/team/edit.html'});
	$routeProvider.when('/teammate/manage', {templateUrl: 'templates/teammate/main.html'});
	$routeProvider.when('/teammate/edit/:id', {templateUrl: 'templates/teammate/edit.html'});
    $routeProvider.otherwise({redirectTo: '/', templateUrl: 'templates/dashboard.html'});
	}
);

/**
 * Ressources configuration
 */
app.factory('alertService', function($rootScope) {
	
    var alertService = {};
    
    alertService.alertMessage = '';
    alertService.alertType = null;
    

    alertService.prepForBroadcast = function(alertMessage,alertType) {
        this.alertMessage = alertMessage;
        this.alertType = alertType;
        this.broadcastItem();
    };

    alertService.broadcastItem = function() {
        $rootScope.$broadcast('handleBroadcast');
    };

    return alertService;
});

app.factory('Regatta', ['$resource', function ($resource) {
    return $resource(
        '../../rest/regatta/:id', { 'id': '@idRegatta'}, {'update': {method: 'PUT'} });
}]);

app.factory('Boat', ['$resource', function ($resource) {
    return $resource(
        '../../rest/boat/:id', { 'id': '@idBoat'}, {'update': {method: 'PUT'} });
}]);

app.factory('Teammate', ['$resource', function ($resource) {
    return $resource(
        '../../rest/teammate/:id', { 'id': '@idTeammate'}, {'update': {method: 'PUT'} });
}]);

app.factory('Team', ['$resource', function ($resource) {
    return $resource(
        '../../rest/team/:id', { 'id': '@idTeam'}, {'update': {method: 'PUT'} });
}]);


/**
 * Alerts Controller
 */

app.controller('AlertsCtrl', ['$scope', 'alertService', AlertsCtrl]);

function AlertsCtrl($scope, alertService) {
	
	$scope.alerts = [];
	
	 $scope.$on('handleBroadcast', function() {
		 $scope.alerts.push({
	            msg: alertService.alertType,
	            msg: alertService.alertMessage
        });
    });
	 


    $scope.closeAlert = function(index) {
        $scope.alerts.splice(index, 1);
    };
}


/**
 * Boat Controller
 */

app.controller('BoatCtrl', ['$scope', 'Boat', '$cookieStore', '$location', BoatCtrl]);

function BoatCtrl($scope, Boat, $cookieStore, $location) {
 
    $scope.boats = Boat.query();
    
 $scope.addBoat = function() {
    	
    	if($scope.form.name == null) {
    		
    	} else {
    		var found = false;
    		
    		for (var i=0; i<$scope.boats.length; i++) {
    			var currentboat = $scope.boats[i];
    			if(angular.equals(angular.lowercase(currentboat.name), angular.lowercase($scope.form.name))) {
    				found = true;
    				console.log("true");
    			}
    		}
    		if(found == false) {
    
    			var boat = new Boat();
    			boat.name = $scope.form.name;
    			boat.photo = null;
        		
    			console.log(boat);
    			
    			boat.$save();
    			
    			
    			$location.path('/boat/manage')
    		}
    	}
    };
    
    $scope.form = {
    	    name: null
     };
    
}


/**
 * Team Controller
 */

app.controller('TeamCtrl', ['$scope', 'Team', '$cookieStore', TeamCtrl]);

function TeamCtrl($scope, Team, $cookieStore) {
 
    $scope.teams = Team.query();
    
}

app.controller('TeamEdit', ['$scope', 'Team', 'Teammate', 'Boat', 'alertService', '$cookieStore', '$routeParams', TeamEdit]);

function TeamEdit($scope, Team, Teammate, Boat, alertService, $cookieStore, $routeParams) {
 
    $scope.team = Team.get({id: $routeParams.id});
    $scope.teammates = Teammate.query();
    
    $scope.search = {
	    name: ''
	  };
    
    
    
    $scope.isTeammateRegistredInTeam = function(teammateToCheck){
    	var found = false;
		
		for (var i=0; i< $scope.team.teammates.length; i++) {
			teammate =  $scope.team.teammates[i];
			if(teammate.idTeammate == teammateToCheck.idTeammate) {
				found = true;
			}
		}
		
		return found;
    }
    
    $scope.nameFilter = function (item){
        if (item.lastname.indexOf($scope.search.name)!=-1 || item.firstname.indexOf($scope.search.name)!=-1) {
                return true;
            }
            return false;
      };
      
    
   $scope.removeTeammate = function(teammate) {
   	 var index = $scope.team.teammates.indexOf(teammate);
   	 $scope.team.teammates.splice(index, 1);     
   }
   
   $scope.addTeammate = function(teammate) {
	  $scope.team.teammates.push(teammate);     
  }
    
   $scope.saveProperties = function() {
	   $scope.team.$update();
       alertService.prepForBroadcast("Modifications effectuees","alert-succes");
   };
}

/**
 * Teammate Controller
 */

app.controller('TeammateCtrl', ['$scope', 'Teammate', '$cookieStore', TeammateCtrl]);

function TeammateCtrl($scope, Teammate, $cookieStore) {
 
    $scope.teammates = Teammate.query();
    
}


/**
 * Regatta Controller
 */

app.controller('RegattaCtrl', ['$scope', 'Regatta', '$cookieStore', RegattaCtrl]);

function RegattaCtrl($scope, Regatta, $cookieStore) {
 
    $scope.regattas = Regatta.query();
    
}

/**
 * Regatta Edit Controller
 */

app.controller('RegattaEdit', ['$scope', 'Team', 'Regatta', 'alertService', '$cookieStore', '$routeParams',  RegattaEdit]);

function RegattaEdit($scope, Team, Regatta, alertService, $cookieStore, $routeParams) {
 
    $scope.regatta = Regatta.get({id: $routeParams.id});
    $scope.teams = Team.query();
    
    
    $scope.isTeamRegistredInRegatta = function(teamToCheck){
    	var found = false;
		
		for (var i=0; i<$scope.regatta.team.length; i++) {
			team = $scope.regatta.team[i];
			if(team.idTeam == teamToCheck.idTeam) {
				found = true;
			}
		}
		
		return found;
    }
    
    
    
    $scope.newTeam = '';
    
    $scope.addTeams = function() {
    	if($scope.search.team == null) {
    		
    	} else {
    		var found = false;
    		
    		for (var i=0; i<$scope.regatta.team.length; i++) {
    			team = $scope.regatta.team[i];
    			if(team.idTeam == $scope.search.team.idTeam) {
    				found = true;
    			}
    		}
    		if(found == false) {
        		$scope.regatta.team.push($scope.search.team);
    		}
    	}
    };
    
    $scope.removeTeam = function(team) {
    	 var index = $scope.regatta.team.indexOf(team);
    	 console.log(index);
    	 $scope.regatta.team.splice(index, 1);     
    }
    
    $scope.addTeam = function(team) {
   	 $scope.regatta.team.push(team);     
   }
    
    $scope.saveProperties = function() {
    	$scope.regatta.$update();
        alertService.prepForBroadcast("Modifications sauvegardÃ©es","succes");
    };
    
    $scope.search = {
	    name: ''
	  };
}


/**
 * Master Controller
 */
app.controller('MasterCtrl', ['$scope', 'Regatta', '$cookieStore', MasterCtrl]);

function MasterCtrl($scope, Regatta, $cookieStore) {
    /**
     * Sidebar Toggle & Cookie Control
     */
    var mobileView = 992;

    $scope.getWidth = function() {
        return window.innerWidth;
    };

    $scope.$watch($scope.getWidth, function(newValue, oldValue) {
        if (newValue >= mobileView) {
            if (angular.isDefined($cookieStore.get('toggle'))) {
                $scope.toggle = ! $cookieStore.get('toggle') ? false : true;
            } else {
                $scope.toggle = true;
            }
        } else {
            $scope.toggle = false;
        }

    });

    $scope.toggleSidebar = function() {
        $scope.toggle = !$scope.toggle;
        $cookieStore.put('toggle', $scope.toggle);
    };

    window.onresize = function() {
        $scope.$apply();
    };
}

/**
 * DashBoard controller
 */
app.controller('DashboardCtrl', ['$scope', 'Regatta', 'Boat', 'Team', 'Teammate', '$cookieStore', DashboardCtrl]);

function DashboardCtrl($scope, Regatta, Boat, Team, Teammate, $cookieStore) {
   
    $scope.regattas = Regatta.query();
    $scope.boats = Boat.query();
    $scope.teams = Team.query();
    $scope.teammates = Teammate.query();    
}

/**
 * Loading Directive
 * @see http://tobiasahlin.com/spinkit/
 */

app.directive('rdLoading', rdLoading);

function rdLoading() {
    var directive = {
        restrict: 'AE',
        template: '<div class="loading"><div class="double-bounce1"></div><div class="double-bounce2"></div></div>'
    };
    return directive;
};
/**
 * Widget Body Directive
 */

app.directive('rdWidgetBody', rdWidgetBody);

function rdWidgetBody() {
    var directive = {
        requires: '^rdWidget',
        scope: {
            loading: '@?',
            classes: '@?'
        },
        transclude: true,
        template: '<div class="widget-body" ng-class="classes"><rd-loading ng-show="loading"></rd-loading><div ng-hide="loading" class="widget-content" ng-transclude></div></div>',
        restrict: 'E'
    };
    return directive;
};
/**
 * Widget Footer Directive
 */

app.directive('rdWidgetFooter', rdWidgetFooter);

function rdWidgetFooter() {
    var directive = {
        requires: '^rdWidget',
        transclude: true,
        template: '<div class="widget-footer" ng-transclude></div>',
        restrict: 'E'
    };
    return directive;
};
/**
 * Widget Header Directive
 */

app.directive('rdWidgetHeader', rdWidgetTitle);

function rdWidgetTitle() {
    var directive = {
        requires: '^rdWidget',
        scope: {
            title: '@',
            icon: '@'
        },
        transclude: true,
        template: '<div class="widget-header"><i class="fa" ng-class="icon"></i> {{title}} <div class="pull-right" ng-transclude></div></div>',
        restrict: 'E'
    };
    return directive;
};
/**
 * Widget Directive
 */

app.directive('rdWidget', rdWidget);

function rdWidget() {
    var directive = {
        transclude: true,
        template: '<div class="widget" ng-transclude></div>',
        restrict: 'EA'
    };
    return directive;

    function link(scope, element, attrs) {
        /* */
    }
};
